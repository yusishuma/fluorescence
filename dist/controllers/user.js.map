{"version":3,"sources":["../../controllers/user.js"],"names":[],"mappings":";;;;;AAGA,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC;;AAErC,OAAO,CAAC,KAAK,GAAG,UAAS,GAAG,EAAE,GAAG,EAAC;AAC9B,QAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;;;;;AAKvB,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,CAAC,CAAC;CACtE,CAAC;;;AAGF,OAAO,CAAC,aAAa,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACxC,QAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;AACjC,QAAG,CAAC,QAAQ,EACR,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,KAE1C,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;AACvD,YAAG,CAAC,IAAI,EACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,KAE3C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACjD,CAAC,CAAC;CACV,CAAC;;AAEF,OAAO,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;AACxC,QAAI,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;AACtB,WAAO,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;AACrC,QAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,EACvC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC,KAE/C,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;AAC9D,YAAG,CAAC,IAAI,EAAC;AACL,gBAAI,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;AAChC,mBAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACrB,mBAAO,OAAO,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;AACtC,uBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACnB,uBAAO,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;aACrC,CAAC,CAAC;SACN,MAAI;AACD,mBAAO,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;SACzC;KACJ,CAAC,CAAA;CAER,CAAC","file":"user.js","sourcesContent":["/**\n * Created by matonghe on 15/03/2017.\n */\nvar User = require(\"../models\").User;\n//登陆\nexports.login = function(req, res){\n    let reqBody = req.body;\n    //TODO\n    // User.find().then(function (user) {\n    //     return res.json(user);\n    // });\n    res.status(201).json({ nickname: 'tom', username: '15811020373' });\n};\n\n//验证用户手机号\nexports.validatePhone = function (req, res) {\n    let username = req.body.username;\n    if(!username)\n        res.status(400).json({ message: '参数错误' });\n    else\n        User.findOne({ username: username }).then(function (user) {\n           if(!user)\n               res.status(403).json({ message: '用户已存在' });\n           else\n               res.status(201).json({ message: '用户不存在' });\n        });\n};\n\nexports.registerUser = function (req, res) {\n   var reqBody = req.body;\n    console.log('registerUser', reqBody);\n    if (!reqBody.username || !reqBody.password)\n       res.status(400).json({ message: '用户名或密码不存在' });\n   else\n       User.findOne({ username: reqBody.username }).then(function (user) {\n           if(!user){\n               var newUser = new User(reqBody);\n               console.log(newUser);\n               return newUser.save().then(function (user) {\n                    return res.status(201).json(user);\n               }).fail(function (err) {\n                   return res.json({ message: err });\n               });\n           }else{\n               return res.json({ message: '用户已存在' });\n           }\n       })\n\n};\n"]}